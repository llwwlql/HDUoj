<html><head><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta http-equiv="Content-Language" content="en-US"><title>1049 -- Microprocessor Simulation</title><link rel=stylesheet href='poj.css' type='text/css'><link rel='shortcut icon' href='poj.ico'><link rel='icon' href='poj.gif' type='image/gif'><script src='poj.js' language='javascript'></script></head><body lang="en-US" leftmargin=5 link=blue alink=blue vlink=blue onkeydown=KeyDown(event)><a name=top></a><TABLE style='BORDER-COLLAPSE: collapse' borderColor=#ffffff width=100% border=1><TBODY><TR><TD align=CENTER colSpan=5><table class=h1 cellpadding=0><tr><td width=25% align=left><img src='images/logo1.jpg' height=100 border=0></td><td colspan=3 bgcolor='#EAEFFD'><table class=h2><tr><td><img border=0 src='images/logo0.gif' width=450 height=90></td><td width=95><img border=0 src='images/logo3.gif' width=95 height=95></td></tr></table></td></tr></table></TD></TR><TR vAlign=top align=CENTER bgColor=#6589d1><TH class=h>Online Judge</TH><TH class=h>Problem Set</TH><TH class=h>Authors</TH><TH class=h>Online Contests</TH><TH class=h>User</TH></TR><TR vAlign=top align=CENTER bgColor='#f1f1fd'><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><A href='bbs'>Web Board</A><BR><A href='./'>Home Page</A><BR><A href='page?id=1000' target=_blank>F.A.Qs</A><BR><a href='chart'>Statistical Charts</a></TD><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><FORM action=gotoproblem method=get><A href='problemlist'>Problems</A><BR><A href='submit'>Submit Problem</A><BR><A href='status'>Online Status</A><BR><font color=blue>Prob.ID:</font><input type=text name=pid size=6><input type=Submit value=Go name=pb1></form></td><TD class='h' onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=GET action=searchuser><a href=register>Register</a><br><a href=modifyuser>Update your info</a><br><a href=userlist>Authors ranklist</a><br><input type=text name=key size=10><input type=Submit value=Search name=B1></form></TD>
<TD class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><font color=#1a5cc8>Current Contest</font><br><a href=pastcontests>Past Contests</a><br><a href=contests>Scheduled Contests</a><br><a href=challenge.html target=_blank><font color=red>Award Contest</font></a></td><TD align=left class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=POST action=login><table><tr><td>User ID:</td><td><input type=text name=user_id1 size=10 style='font-family:monospace'></td></tr><tr><td>Password:</td><td><input type=password name=password1 size=10 style='font-family:monospace'></td></tr></table><input type=Submit value=login name=B1>&nbsp;&nbsp;<a href=register target=_parent>Register</a><input type=hidden name=url value=/problem?id=1049></form></td></TR></TABLE><table border=0 width=100% background=images/table_back.jpg><tr><td>
<div style='position: absolute; right: 10px;'>Language:<select size=1 onChange="window.location.href='problem?id=1049&lang='+this.value+'&change=true'"><option value='default' selected>Default</option></select></div><div class="ptt" lang="en-US">Microprocessor Simulation</div>
<div class="plm"><table align="center"><tr><td><b>Time Limit:</b> 1000MS</td><td width="10px"></td><td><b>Memory Limit:</b> 10000K</td></tr><tr><td><b>Total Submissions:</b> 3211</td><td width="10px"></td><td><b>Accepted:</b> 944</td></table></div><p class="pst">Description</p><div class="ptx" lang="en-US">Consider a small microprocessor that has the following properties:<br>?Each word is four bits.<br>?Addresses are two words. The high word always comes first. That is, the high word of a two-word address will always occupy the lower word of memory.<br>?Memory is 256 words.<br>?There are two accumulators, A and B, each storing one word.<br>?There are nine instruction codes. Each instruction requires at least one word to store the code that specifies the instruction. Four instructions have arguments and require an additional two words.<br>Each 4 bit number can have the values from 0 to 15, inclusive, in base 10. We will write these using hexadecimal in the usual way, i.e. A means 10, B means 11, etc.<br>These are the nine instructions:<br><table border="1" width="100%" cellpadding="0" cellspacing="0">  <tr>    <td width="11%" align="center">Code</td>    <td width="11%" align="center"><b><span lang="EN-US">Words</span></b></td>    <td width="78%"><b><span lang="EN-US">Description</span></b></td>  </tr>  <tr>    <td width="11%" align="center">0</td>    <td width="11%" align="center">3</td>    <td width="78%"><span lang="EN-US">LD: Load accumulator A with the contents       of memory at the specified argument.</span></td>  </tr>  <tr>    <td width="11%" align="center">1</td>    <td width="11%" align="center">3</td>    <td width="78%"><span lang="EN-US">ST: Write the contents of accumulator A       to the memory location specified by the argumen</span></td>  </tr>  <tr>    <td width="11%" align="center">2</td>    <td width="11%" align="center">1</td>    <td width="78%"><span lang="EN-US">SWP: Swap the contents of accumulators A       and B.</span></td>  </tr>  <tr>    <td width="11%" align="center">3</td>    <td width="11%" align="center">1</td>    <td width="78%"><span lang="EN-US">ADD: Add the contents of accumulators A       and B. The low word of the sum is stored in A, and the high word in B</span></td>  </tr>  <tr>    <td width="11%" align="center">4</td>    <td width="11%" align="center">1</td>    <td width="78%"><span lang="EN-US">INC: Increment accumulator A. Overflow is       allowed; that is, incrementing F yields 0.</span></td>  </tr>  <tr>    <td width="11%" align="center">5</td>    <td width="11%" align="center">1</td>    <td width="78%"><span lang="EN-US">DEC: Decrement accumulator A. Underflow       is allowed; that is, decrementing 0 yields F.</span></td>  </tr>  <tr>    <td width="11%" align="center">6</td>    <td width="11%" align="center">3</td>    <td width="78%"><span lang="EN-US">BZ: If accumulator A is zero, the next       command to be executed is at the location specified by the argument. If A       is not zero, the argument is ignored and nothing happens.</span></td>  </tr>  <tr>    <td width="11%" align="center">7</td>    <td width="11%" align="center">3</td>    <td width="78%"><span lang="EN-US">BR: The next command to be executed is at       the location specified by the argument.</span></td>  </tr>  <tr>    <td width="11%" align="center">8</td>    <td width="11%" align="center">1</td>    <td width="78%"><span lang="EN-US">STP: Stop execution of the program.</span></td>  </tr></table><br>The microprocessor always begins by executing the command at location 00. It executes the commands in sequence until it reaches the Stop command.<br>The examples below show partial programs and describe their affect.<br><table border="1" cellpadding="0" cellspacing="0" width="100%">  <tr>    <td width="13%"><span lang="EN-US">Program</span></td>    <td width="87%"><span lang="EN-US">Description</span></td>  </tr>  <tr>    <td width="13%"><span lang="EN-US">01A8</span></td>    <td width="87%"><span lang="EN-US">Load accumulator A with the contents of       memory location 1A (26 in decimal) and stop.</span></td>  </tr>  <tr>    <td width="13%"><span lang="EN-US">01A512F8</span></td>    <td width="87%"><span lang="EN-US">Load accumulator A with the contents of       memory location 1A (26 in decimal), decrement it, store the result to       memory location 2F, then stop.</span></td>  </tr></table></div><p class="pst">Input</p><div class="ptx" lang="en-US">The input will consist of several lines of exactly 256 hex characters. Each line is the contents of memory, beginning with address 00 and ending with address FF. The end of the input is indicated by a memory state that has a stop instruction (an "8") at address 00. The input programs will never "fall of the end of memory" that is, you will never execute an instruction that is located between addresses F0 and FF, inclusive.</div><p class="pst">Output</p><div class="ptx" lang="en-US">For each memory state, you should simulate execution beginning with address 00. When the stop instruction is reached, you will dump the contents of memory to the output as a single string of 256 hex characters followed by a newline character.</div><p class="pst">Sample Input</p><pre class="sio">0102011311321128FF0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
</pre><p class="pst">Sample Output</p><pre class="sio">0102011311321128FF1E00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
</pre><p class="pst">Source</p><div class="ptx" lang="en-US"><a href="searchproblem?field=source&key=Greater+New+York+2001">Greater New York 2001</a></div></td></tr></table>
<font color=#333399 size=3><p align="center">
[<a href="submit?problem_id=1049">Submit</a>]&nbsp;&nbsp;
 [<a href="javascript:history.go(-1)">Go Back</a>]&nbsp;&nbsp; [<a href=problemstatus?problem_id=1049>Status</a>]&nbsp;&nbsp; 
[<a href="bbs?problem_id=1049">Discuss</a>]
</font></p>
<p><img height=30 src=images/home.gif width=40 border=0><font size=3><a href=.>Home Page</a> </font>&nbsp;&nbsp;<img height=30 src='images/goback.gif' width=40 border=0><font size=3><a href='javascript:history.go(-1)'>Go Back</a>&nbsp;&nbsp;<img height=30 width=40 border=0 src='images/top.gif'><a href=#top>To top</a></font><br><hr><P align=center style='font-family:Arial, Helvetica, sans-serif'>All Rights Reserved 2003-2013 Ying Fuchen,Xu Pengcheng,Xie Di<br>Any problem, Please <a href=mailto:webmaster@poj.org>Contact Administrator</a></p><script type="text/javascript"> var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-790353-1']); _gaq.push(['_trackPageview']); (function() { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); </script></body></html>
