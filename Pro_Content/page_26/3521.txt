<html><head><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta http-equiv="Content-Language" content="en-US"><title>3521 -- Geometric Map</title><link rel=stylesheet href='poj.css' type='text/css'><link rel='shortcut icon' href='poj.ico'><link rel='icon' href='poj.gif' type='image/gif'><script src='poj.js' language='javascript'></script></head><body lang="en-US" leftmargin=5 link=blue alink=blue vlink=blue onkeydown=KeyDown(event)><a name=top></a><TABLE style='BORDER-COLLAPSE: collapse' borderColor=#ffffff width=100% border=1><TBODY><TR><TD align=CENTER colSpan=5><table class=h1 cellpadding=0><tr><td width=25% align=left><img src='images/logo1.jpg' height=100 border=0></td><td colspan=3 bgcolor='#EAEFFD'><table class=h2><tr><td><img border=0 src='images/logo0.gif' width=450 height=90></td><td width=95><img border=0 src='images/logo3.gif' width=95 height=95></td></tr></table></td></tr></table></TD></TR><TR vAlign=top align=CENTER bgColor=#6589d1><TH class=h>Online Judge</TH><TH class=h>Problem Set</TH><TH class=h>Authors</TH><TH class=h>Online Contests</TH><TH class=h>User</TH></TR><TR vAlign=top align=CENTER bgColor='#f1f1fd'><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><A href='bbs'>Web Board</A><BR><A href='./'>Home Page</A><BR><A href='page?id=1000' target=_blank>F.A.Qs</A><BR><a href='chart'>Statistical Charts</a></TD><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><FORM action=gotoproblem method=get><A href='problemlist'>Problems</A><BR><A href='submit'>Submit Problem</A><BR><A href='status'>Online Status</A><BR><font color=blue>Prob.ID:</font><input type=text name=pid size=6><input type=Submit value=Go name=pb1></form></td><TD class='h' onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=GET action=searchuser><a href=register>Register</a><br><a href=modifyuser>Update your info</a><br><a href=userlist>Authors ranklist</a><br><input type=text name=key size=10><input type=Submit value=Search name=B1></form></TD>
<TD class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><font color=#1a5cc8>Current Contest</font><br><a href=pastcontests>Past Contests</a><br><a href=contests>Scheduled Contests</a><br><a href=challenge.html target=_blank><font color=red>Award Contest</font></a></td><TD align=left class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=POST action=login><table><tr><td>User ID:</td><td><input type=text name=user_id1 size=10 style='font-family:monospace'></td></tr><tr><td>Password:</td><td><input type=password name=password1 size=10 style='font-family:monospace'></td></tr></table><input type=Submit value=login name=B1>&nbsp;&nbsp;<a href=register target=_parent>Register</a><input type=hidden name=url value=/problem?id=3521></form></td></TR></TABLE><table border=0 width=100% background=images/table_back.jpg><tr><td>
<div style='position: absolute; right: 10px;'>Language:<select size=1 onChange="window.location.href='problem?id=3521&lang='+this.value+'&change=true'"><option value='default' selected>Default</option></select></div><div class="ptt" lang="en-US">Geometric Map</div>
<div class="plm"><table align="center"><tr><td><b>Time Limit:</b> 5000MS</td><td width="10px"></td><td><b>Memory Limit:</b> 65536K</td></tr><tr><td><b>Total Submissions:</b> 374</td><td width="10px"></td><td><b>Accepted:</b> 148</td></table></div><p class="pst">Description</p><div class="ptx" lang="en-US"><p>Your task in this problem is to create a program that finds the shortest path between two given locations on a given street map, which is represented as a collection of line segments on a plane.</p><div align="center"><img src="images/3521_1.png"><br>Figure 4: An example map</div><p>Figure 4 is an example of a street map, where some line segments represent streets and the others are signs indicating the directions in which cars cannot move. More concretely, <tt>AE</tt>, <tt>AM</tt>, <tt>MQ</tt>, <tt>EQ</tt>, <tt>CP</tt> and <tt>HJ</tt> represent the streets and the others are signs in this map. In general, an end point of a sign touches one and only one line segment representing a street and the other end point is open. Each end point of every street touches one or more streets, but no signs.</p><p>The sign <tt>BF</tt>, for instance, indicates that at <tt>B</tt> cars may move left to right but may not in the reverse direction. In general, cars may not move from the obtuse angle side to the acute angle side at a point where a sign touches a street (note that the angle <tt>CBF</tt> is obtuse and the angle <tt>ABF</tt> is acute). Cars may directly move neither from <tt>P</tt> to <tt>M</tt> nor from <tt>M</tt> to <tt>P</tt> since cars moving left to right may not go through <tt>N</tt> and those moving right to left may not go through <tt>O</tt>. In a special case where the angle between a sign and a street is rectangular, cars may not move in either directions at the point. For instance, cars may directly move neither from <tt>H</tt> to <tt>J</tt> nor from <tt>J</tt> to <tt>H</tt>.</p><p>You should write a program that finds the shortest path obeying these traffic rules. The length of a line segment between (<i>x</i><sub>1</sub>, <i>y</i><sub>1</sub>) and (<i>x</i><sub>2</sub>, <i>y</i><sub>2</sub>) is <img src="formula?tex=%5Csqrt%7B%28x_2-x_1%29%5E2%2B%28y_2-y_1%29%5E2%7D" alt="\sqrt{(x_2-x_1)^2+(y_2-y_1)^2}" align="absmiddle">.</p></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The input consists of multiple datasets, each in the following format.</p><p style="padding-left: 2em;"><i>n</i><br><i>x<sub>s</sub></i> <i>y<sub>s</sub></i><br><i>x<sub>g</sub></i> <i>y<sub>g</sub></i><br><i>x</i><sub>1</sub><sup style="margin-left: -0.75ex;">1</sup> <i>y</i><sub>1</sub><sup style="margin-left: -0.75ex;">1</sup> <i>x</i><sub>2</sub><sup style="margin-left: -0.75ex;">1</sup> <i>y</i><sub>2</sub><sup style="margin-left: -0.75ex;">1</sup><br>⋮<br><i>x</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup> <i>y</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup> <i>x</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup> <i>y</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup><br>⋮<br><i>x</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>n</i></sup> <i>y</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>n</i></sup> <i>x</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>n</i></sup> <i>y</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>n</i></sup></p><p><i>n</i>, representing the number of line segments, is a positive integer less than or equal to 200.</p><p>(<i>x<sub>s</sub></i>, <i>y<sub>s</sub></i>) and (<i>x<sub>g</sub></i>, <i>y<sub>g</sub></i>) are the start and goal points, respectively. You can assume that (<i>x<sub>s</sub></i>, <i>y<sub>s</sub></i>) ≠ (<i>x<sub>g</sub></i>, <i>y<sub>g</sub></i>) and that each of them is located on an end point of some line segment representing a street. You can also assume that the shortest path from (<i>x<sub>s</sub></i>, <i>y<sub>s</sub></i>) to (<i>x<sub>g</sub></i>, <i>y<sub>g</sub></i>) is unique.</p><p>(<i>x</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>, <i>y</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>) and (<i>x</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>, <i>y</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>) are the two end points of the <i>k</i>th line segment. You can assume that (<i>x</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>, <i>y</i><sub>1</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>) ≠ (<i>x</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>, <i>y</i><sub>2</sub><sup style="margin-left: -0.75ex;"><i>k</i></sup>) Two line segments never cross nor overlap. That is, if they share a point, it is always one of their end points.</p><p>All the coordinates are non-negative integers less than or equal to 1000. The end of the input is indicated by a line containing a single zero.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For each input dataset, print every <i>street intersection point</i> on the shortest path from the start point to the goal point, one in an output line in this order, and a zero in a line following those points. Note that a street intersection point is a point where at least two line segments representing streets meet. An output line for a street intersection point should contain its <i>x</i>- and <i>y</i>-coordinates separated by a space.</p><p>Print −1 if there are no paths from the start point to the goal point.</p></div><p class="pst">Sample Input</p><pre class="sio">8
1 1
4 4
1 1 4 1
1 1 1 4
3 1 3 4
4 3 5 3
2 4 3 5
4 1 4 4
3 3 2 2
1 4 4 4
9
1 5
5 1
5 4 5 1
1 5 1 1
1 5 5 1
2 3 2 4
5 4 1 5
3 2 2 1
4 2 4 1
1 1 5 1
5 3 4 3
11
5 5
1 0
3 1 5 1
4 3 4 2
3 1 5 5
2 3 2 2
1 0 1 2
1 2 3 4
3 4 5 5
1 0 5 2
4 0 4 1
5 5 5 1
2 3 2 4
0</pre><p class="pst">Sample Output</p><pre class="sio">1 1
3 1
3 4
4 4
0
-1
5 5
5 2
3 1
1 0
0</pre><p class="pst">Source</p><div class="ptx" lang="en-US"><a href="searchproblem?field=source&key=Japan+2007">Japan 2007</a></div></td></tr></table>
<font color=#333399 size=3><p align="center">
[<a href="submit?problem_id=3521">Submit</a>]&nbsp;&nbsp;
 [<a href="javascript:history.go(-1)">Go Back</a>]&nbsp;&nbsp; [<a href=problemstatus?problem_id=3521>Status</a>]&nbsp;&nbsp; 
[<a href="bbs?problem_id=3521">Discuss</a>]
</font></p>
<p><img height=30 src=images/home.gif width=40 border=0><font size=3><a href=.>Home Page</a> </font>&nbsp;&nbsp;<img height=30 src='images/goback.gif' width=40 border=0><font size=3><a href='javascript:history.go(-1)'>Go Back</a>&nbsp;&nbsp;<img height=30 width=40 border=0 src='images/top.gif'><a href=#top>To top</a></font><br><hr><P align=center style='font-family:Arial, Helvetica, sans-serif'>All Rights Reserved 2003-2013 Ying Fuchen,Xu Pengcheng,Xie Di<br>Any problem, Please <a href=mailto:webmaster@poj.org>Contact Administrator</a></p><script type="text/javascript"> var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-790353-1']); _gaq.push(['_trackPageview']); (function() { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); </script></body></html>
