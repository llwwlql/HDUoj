<html><head><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta http-equiv="Content-Language" content="en-US"><title>3203 -- Incremental Python Parsing</title><link rel=stylesheet href='poj.css' type='text/css'><link rel='shortcut icon' href='poj.ico'><link rel='icon' href='poj.gif' type='image/gif'><script src='poj.js' language='javascript'></script></head><body lang="en-US" leftmargin=5 link=blue alink=blue vlink=blue onkeydown=KeyDown(event)><a name=top></a><TABLE style='BORDER-COLLAPSE: collapse' borderColor=#ffffff width=100% border=1><TBODY><TR><TD align=CENTER colSpan=5><table class=h1 cellpadding=0><tr><td width=25% align=left><img src='images/logo1.jpg' height=100 border=0></td><td colspan=3 bgcolor='#EAEFFD'><table class=h2><tr><td><img border=0 src='images/logo0.gif' width=450 height=90></td><td width=95><img border=0 src='images/logo3.gif' width=95 height=95></td></tr></table></td></tr></table></TD></TR><TR vAlign=top align=CENTER bgColor=#6589d1><TH class=h>Online Judge</TH><TH class=h>Problem Set</TH><TH class=h>Authors</TH><TH class=h>Online Contests</TH><TH class=h>User</TH></TR><TR vAlign=top align=CENTER bgColor='#f1f1fd'><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><A href='bbs'>Web Board</A><BR><A href='./'>Home Page</A><BR><A href='page?id=1000' target=_blank>F.A.Qs</A><BR><a href='chart'>Statistical Charts</a></TD><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><FORM action=gotoproblem method=get><A href='problemlist'>Problems</A><BR><A href='submit'>Submit Problem</A><BR><A href='status'>Online Status</A><BR><font color=blue>Prob.ID:</font><input type=text name=pid size=6><input type=Submit value=Go name=pb1></form></td><TD class='h' onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=GET action=searchuser><a href=register>Register</a><br><a href=modifyuser>Update your info</a><br><a href=userlist>Authors ranklist</a><br><input type=text name=key size=10><input type=Submit value=Search name=B1></form></TD>
<TD class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><font color=#1a5cc8>Current Contest</font><br><a href=pastcontests>Past Contests</a><br><a href=contests>Scheduled Contests</a><br><a href=challenge.html target=_blank><font color=red>Award Contest</font></a></td><TD align=left class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=POST action=login><table><tr><td>User ID:</td><td><input type=text name=user_id1 size=10 style='font-family:monospace'></td></tr><tr><td>Password:</td><td><input type=password name=password1 size=10 style='font-family:monospace'></td></tr></table><input type=Submit value=login name=B1>&nbsp;&nbsp;<a href=register target=_parent>Register</a><input type=hidden name=url value=/problem?id=3203></form></td></TR></TABLE><table border=0 width=100% background=images/table_back.jpg><tr><td>
<div style='position: absolute; right: 10px;'>Language:<select size=1 onChange="window.location.href='problem?id=3203&lang='+this.value+'&change=true'"><option value='default' selected>Default</option></select></div><div class="ptt" lang="en-US">Incremental Python Parsing</div>
<div class="plm"><table align="center"><tr><td><b>Time Limit:</b> 2000MS</td><td width="10px"></td><td><b>Memory Limit:</b> 131072K</td></tr><tr><td><b>Total Submissions:</b> 152</td><td width="10px"></td><td><b>Accepted:</b> 7</td></table></div><p class="pst">Description</p><div class="ptx" lang="en-US"><span lang="en-us"><p>For the sake of simplicity, only the following subset of Python syntax is considered:</p><p><code>PLAIN_TEXT</code>:<code><br>&nbsp;&nbsp;&nbsp; [^&quot;()\[\]{}]+</code> <br> <code>STRING</code>:<code><br>&nbsp;&nbsp;&nbsp; \&quot;[^&quot;]*\&quot;</code> <br> <i>text</i>:<br><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><font color="#7f7f7f">(empty)</font><code><br> &nbsp;&nbsp;&nbsp; | </code><i>text</i> <code> PLAIN_TEXT<br> &nbsp;&nbsp;&nbsp; | </code><i>text</i> <code> STRING<br> &nbsp;&nbsp;&nbsp; | </code><i>text</i> <code> </code> <i>bracket_enclosed_text</i><br> <i>bracket_enclosed_text</i>:<br><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( </code> <i>text</i> <code> )<br> </code><code>&nbsp;&nbsp;&nbsp; | [ </code> <i>text</i> <code> ]<br> </code><code>&nbsp;&nbsp;&nbsp; | { </code> <i>text</i> <code> }</code></p> <p>From the syntax some terms are defined as follows:</p> <ol> <li><p>String: a sequence delimited by quotes (<code>&quot;</code>) of characters other than quotes, possibly including new-lines.</p> <p>Examples:<br> <code>&nbsp; &quot;a(bc&quot;<br> &nbsp; &quot;a<br> bc)&quot;<br> &nbsp; &quot;usage: foo [bar]<br> this help information<br> is<br> totally<br> useless&quot; </code></p><p>(Python actually <code>&quot;&quot;&quot;</code> for such strings, but let&rsquo;s accept the modification just for this problem.)</p></li> <li><p>Bracket-enclosed text: a sequence of characters other than brackets or quotes enclosed by matched pairs of brackets.</p><p>Example:<br> <code>&nbsp; (1)<br> &nbsp; {a-&gt;[foo.bar(<br> &nbsp; &quot;a[&quot;,b,c<br> &nbsp; )]}</code></p></li> <li><p>Logical new-line: a new-line character that is not part of a string or bracket-enclosed text</p></li> <li><p>Physical line: a maximal sequence of characters other than new-line characters</p><p>Examples:<br> <code>def a(b)&nbsp;&nbsp;&nbsp; </code># physical line 1<code><br> &nbsp; foo.bar(&nbsp; </code># physical line 2<code><br> &nbsp; &quot;a[&quot;,b)&nbsp;&nbsp; </code># physical line 3<code><br> &quot;blah blah, </code># physical line 4<code><br> blah&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code># physical line 5</p></li> <li><p>Logical line: a maximal sequence of characters other than logical new-lines</p><p>Examples:<br> <code>def a(b)&nbsp;&nbsp;&nbsp; </code># logical line 1<code><br> &nbsp; foo.bar(&nbsp; </code># logical line 2<code><br> &nbsp; &quot;a[&quot;,b)&nbsp;&nbsp; </code># logical line 2<code><br> &quot;blah blah, </code># logical line 3<code><br> blah&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code># logical line 3<code>&nbsp;</code></p></li> <li><p>Valid/invalid program: a program without/with mismatched quotes or brackets that are not part of any strings&nbsp; </p><p>Examples:<br> <code>&nbsp; def a(b<br> &nbsp; &quot;blah</code></p></li></ol><p>Given a program, you are to implement the following primitive operations:</p><ul> <li><i>modify</i>(<i>a</i>, <i>b</i>, <i>c</i>): Modify the character at physical line <i>a</i>, column <i>b</i> to <i>c</i></li> <li><i>query</i>(<i>a</i>, <i>b</i>): Tell which logical line the character at physical line <i>a</i>, column <i>b</i> is on.</li></ul></span></div><p class="pst">Input</p><div class="ptx" lang="en-US"><p>The given program appears first in the input followed by a line with a single <code>#</code>. Then come the operation descriptions. Each operation is described in the format <i>c</i><code> </code><i>a</i><code> </code><i>b</i>, where <i>c</i> is a character, <i>a</i> a physical line number and <i>b</i> a column number. Both physical line and column numbers are counted starting from 1. If <i>c</i> is <code>?</code>, the operation will be <i>query</i>(<i>a</i>, <i>b</i>), otherwise it will be <i>modify</i>(<i>a</i>, <i>b</i>, <i>c</i>). The program can be invalid while being edited, but whenever a <i>query</i> operation is demanded, it will always be valid. A <i>modify</i> operation will neither remove existing spaces and new-lines in the program nor introduce new ones. Tabs are not present in the input.</p><p>The program contains up to 10<sup>6</sup> characters (including new-lines) and 10<sup>5</sup> physical lines each consisting of up to 80 characters. And there will be at most 10<sup>5</sup> operations.</p></div><p class="pst">Output</p><div class="ptx" lang="en-US"><p>For each query operation, output a line containing the logical line number.</p></div><p class="pst">Sample Input</p><pre class="sio">aaa
(bb
ccc
dd)
fff
#
? 1 1
? 5 1
b 2 1
d 4 3
? 5 1
" 1 3
" 5 2
? 5 1
a 1 3
f 5 2
? 5 1</pre><p class="pst">Sample Output</p><pre class="sio">1
3
5
1
5</pre><p class="pst">Source</p><div class="ptx" lang="en-US"><a href="searchproblem?field=source&key=POJ+Monthly--2007.03.04">POJ Monthly--2007.03.04</a>, Hou, Qiming</div></td></tr></table>
<font color=#333399 size=3><p align="center">
[<a href="submit?problem_id=3203">Submit</a>]&nbsp;&nbsp;
 [<a href="javascript:history.go(-1)">Go Back</a>]&nbsp;&nbsp; [<a href=problemstatus?problem_id=3203>Status</a>]&nbsp;&nbsp; 
[<a href="bbs?problem_id=3203">Discuss</a>]
</font></p>
<p><img height=30 src=images/home.gif width=40 border=0><font size=3><a href=.>Home Page</a> </font>&nbsp;&nbsp;<img height=30 src='images/goback.gif' width=40 border=0><font size=3><a href='javascript:history.go(-1)'>Go Back</a>&nbsp;&nbsp;<img height=30 width=40 border=0 src='images/top.gif'><a href=#top>To top</a></font><br><hr><P align=center style='font-family:Arial, Helvetica, sans-serif'>All Rights Reserved 2003-2013 Ying Fuchen,Xu Pengcheng,Xie Di<br>Any problem, Please <a href=mailto:webmaster@poj.org>Contact Administrator</a></p><script type="text/javascript"> var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-790353-1']); _gaq.push(['_trackPageview']); (function() { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); </script></body></html>
