<html><head><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta http-equiv="Content-Language" content="en-US"><title>3108 -- Horn Clauses</title><link rel=stylesheet href='poj.css' type='text/css'><link rel='shortcut icon' href='poj.ico'><link rel='icon' href='poj.gif' type='image/gif'><script src='poj.js' language='javascript'></script></head><body lang="en-US" leftmargin=5 link=blue alink=blue vlink=blue onkeydown=KeyDown(event)><a name=top></a><TABLE style='BORDER-COLLAPSE: collapse' borderColor=#ffffff width=100% border=1><TBODY><TR><TD align=CENTER colSpan=5><table class=h1 cellpadding=0><tr><td width=25% align=left><img src='images/logo1.jpg' height=100 border=0></td><td colspan=3 bgcolor='#EAEFFD'><table class=h2><tr><td><img border=0 src='images/logo0.gif' width=450 height=90></td><td width=95><img border=0 src='images/logo3.gif' width=95 height=95></td></tr></table></td></tr></table></TD></TR><TR vAlign=top align=CENTER bgColor=#6589d1><TH class=h>Online Judge</TH><TH class=h>Problem Set</TH><TH class=h>Authors</TH><TH class=h>Online Contests</TH><TH class=h>User</TH></TR><TR vAlign=top align=CENTER bgColor='#f1f1fd'><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><A href='bbs'>Web Board</A><BR><A href='./'>Home Page</A><BR><A href='page?id=1000' target=_blank>F.A.Qs</A><BR><a href='chart'>Statistical Charts</a></TD><TD class='h' onMouseOver='scbg(this, 1)' onMouseOut='scbg(this, 0)'><FORM action=gotoproblem method=get><A href='problemlist'>Problems</A><BR><A href='submit'>Submit Problem</A><BR><A href='status'>Online Status</A><BR><font color=blue>Prob.ID:</font><input type=text name=pid size=6><input type=Submit value=Go name=pb1></form></td><TD class='h' onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=GET action=searchuser><a href=register>Register</a><br><a href=modifyuser>Update your info</a><br><a href=userlist>Authors ranklist</a><br><input type=text name=key size=10><input type=Submit value=Search name=B1></form></TD>
<TD class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><font color=#1a5cc8>Current Contest</font><br><a href=pastcontests>Past Contests</a><br><a href=contests>Scheduled Contests</a><br><a href=challenge.html target=_blank><font color=red>Award Contest</font></a></td><TD align=left class=h onMouseOver='scbg(this,1)' onMouseOut='scbg(this,0)'><form method=POST action=login><table><tr><td>User ID:</td><td><input type=text name=user_id1 size=10 style='font-family:monospace'></td></tr><tr><td>Password:</td><td><input type=password name=password1 size=10 style='font-family:monospace'></td></tr></table><input type=Submit value=login name=B1>&nbsp;&nbsp;<a href=register target=_parent>Register</a><input type=hidden name=url value=/problem?id=3108></form></td></TR></TABLE><table border=0 width=100% background=images/table_back.jpg><tr><td>
<div style='position: absolute; right: 10px;'>Language:<select size=1 onChange="window.location.href='problem?id=3108&lang='+this.value+'&change=true'"><option value='default' selected>Default</option></select></div><div class="ptt" lang="en-US">Horn Clauses</div>
<div class="plm"><table align="center"><tr><td><b>Time Limit:</b> 2000MS</td><td width="10px"></td><td colspan="3"><b>Memory Limit:</b> 65536K</td></tr><tr><td><b>Total Submissions:</b> 389</td><td width="10px"></td><td><b>Accepted:</b> 71</td><td width="10px"></td><td style="font-weight:bold; color:red;">Special Judge</td></tr></table></div><p class="pst">Description</p><div class="ptx" lang="en-US"><span lang="en-us"><p>Consider some set of boolean variables and a boolean formula. A set of values for the variables is called <i>satisfying</i> if the formula evaluates to true after replacing the variables by the corresponding values. A formula is called <i>unsatisfiable</i> if there exist no such set.</p><p>In general, there is no known algorithm finding the satisfying set of values in polynomial time, although it is not yet proved that such algorithm does not exist. The same holds for determining whether the given formula is unsatisfiable. Despite this there are some particular classes of boolean formulae for which the problem of satisfiability and unsatisfiability can be solved in polynomial time. Now we will define one of such classes, and your task will be to create polynomial time algorithm for it.</p><p>A <i>Horn claus</i>e is a boolean formula, constructed according to the rules below. Let <i>x</i> be a variable from the set. Then a <i>literal</i> is a boolean expression which consists only of the variable by itself or of the variable negation: either <i>x</i> (<i>positive</i> literal) or &not;x (<i>negative</i> literal). A <i>clause</i> is a disjunction of one or more literals. A <i>Horn clause</i> is a clause with at most one positive literal.</p><p>Consider some Horn clause &not;<i>n</i><sub>1</sub>&or;&not;<i>n</i><sub>2</sub>&or;&hellip;&or;&not;<i>n<sub>k</sub></i> &or;<i>p</i>. It would be more convenient to replace disjunctions with implication: (<i>n</i><sub>1</sub>&and;<i>n</i><sub>2</sub>&and;&hellip;&and;<i>n<sub>k</sub></i>)&rArr;<i>p</i>.</p><p>For consistency, when <i>succedent</i> (the right part of the implication) is empty we will imagine that there is a constant <code>false</code> specified instead; similarly empty <i>antecedent</i> (the left part of the implication) is supposed to be <code>true</code>.</p><p>Consider a formula which is a conjunction of one or more Horn clauses. In this particular case, satisfiability and unsatisfiability problems can be solved by polynomial time algorithms. Write a program that would do it.</p></span></div><p class="pst">Input</p><div class="ptx" lang="en-US"><span lang="en-us"><p>The file consists of formulae, written according to the following BNF. Here [&lsaquo;expression&rsaquo;] means that expression may be omitted, {&lsaquo;expression&rsaquo;} means that expression may occur zero or more times. Characters in quotes denote themselves.</p><div align="center"><table bordercolor="#000000"><tr><td align="right">&lsaquo;char&rsaquo;</td><td align="center" width="10%"><span lang="en-us">&rarr;</span></td><td><span lang="en-us">&lsquo;<code>A</code>&rsquo; | &lsquo;<code>B</code>&rsquo; | &hellip; | &lsquo;<code>Z</code>&rsquo;</span></td></tr><tr><td align="right">&lsaquo;variable&rsaquo;</td><td align="center" width="10%"><span lang="en-us">&rarr;</span></td><td><span lang="en-us">&lsaquo;char&rsaquo; {&lsaquo;char&rsaquo;}</span></td></tr><tr><td align="right">&lsaquo;horn-clause&rsaquo;</td><td align="center" width="10%"><span lang="en-us">&rarr;</span></td><td><span lang="en-us">&lsquo;<code>(</code>&rsquo; [&lsaquo;variable&rsaquo; {&lsquo;<code>&amp;</code>&rsquo; &lsaquo;variable&rsaquo;}] &lsquo;<code>=&gt;</code>&rsquo; &lsaquo;variable&rsaquo; &lsquo;<code>)</code>&rsquo;</span></td></tr><tr><td align="right"></td><td align="center" width="10%">|</td><td><span lang="en-us">&lsquo;<code>(</code>&rsquo; &lsaquo;variable&rsaquo; {&lsquo;<code>&amp;</code>&rsquo; &lsaquo;variable&rsaquo;} &lsquo;<code>=&gt;</code>&rsquo; [&lsaquo;variable&rsaquo;] &lsquo;<code>)</code>&rsquo;</span></td></tr><tr><td align="right">&lsaquo;formula&rsaquo;</td><td align="center" width="10%"><span lang="en-us">&rarr;</span></td><td><span lang="en-us">&lsaquo;horn-clause&rsaquo; {&lsquo;<code>&amp;</code>&rsquo; &lsaquo;horn-clause&rsaquo;}</span></td></tr></table></div><p>Each formula is specified in a separate line. The total length of the input file does not exceed 20 000 characters.</p></span></div><p class="pst">Output</p><div class="ptx" lang="en-US"><span lang="en-us"><p>Your output must contain either the set of variables with their values that satisfy the corresponding formulae, or word &ldquo;<code>unsatisfiable</code>&rdquo;. The variables may be specified in arbitrary order; the value for each variable must be specified exactly once. If there is more than one satisfying set, output any one.</p></span></div><p class="pst">Sample Input</p><pre class="sio">(A&B&C=>QQQQ)&(=>A)
(A=>)&(=>A)</pre><p class="pst">Sample Output</p><pre class="sio">A=true,C=false,B=false,QQQQ=false
unsatisfiable</pre><p class="pst">Source</p><div class="ptx" lang="en-US"><a href="searchproblem?field=source&key=Northeastern+Europe+2005">Northeastern Europe 2005</a>, Northern Subregion</div></td></tr></table>
<font color=#333399 size=3><p align="center">
[<a href="submit?problem_id=3108">Submit</a>]&nbsp;&nbsp;
 [<a href="javascript:history.go(-1)">Go Back</a>]&nbsp;&nbsp; [<a href=problemstatus?problem_id=3108>Status</a>]&nbsp;&nbsp; 
[<a href="bbs?problem_id=3108">Discuss</a>]
</font></p>
<p><img height=30 src=images/home.gif width=40 border=0><font size=3><a href=.>Home Page</a> </font>&nbsp;&nbsp;<img height=30 src='images/goback.gif' width=40 border=0><font size=3><a href='javascript:history.go(-1)'>Go Back</a>&nbsp;&nbsp;<img height=30 width=40 border=0 src='images/top.gif'><a href=#top>To top</a></font><br><hr><P align=center style='font-family:Arial, Helvetica, sans-serif'>All Rights Reserved 2003-2013 Ying Fuchen,Xu Pengcheng,Xie Di<br>Any problem, Please <a href=mailto:webmaster@poj.org>Contact Administrator</a></p><script type="text/javascript"> var _gaq = _gaq || []; _gaq.push(['_setAccount', 'UA-790353-1']); _gaq.push(['_trackPageview']); (function() { var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true; ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s); })(); </script></body></html>
